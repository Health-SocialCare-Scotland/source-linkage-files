} else {
write_lines("Skipping as fst file already exists in sourcedev",
path = "log",
append = TRUE
)
}
} else {
write_lines(paste0("Skipping 20", year, " as zsav file doesn't exist"),
path = "log",
append = TRUE
)
}
end_time <- Sys.time()
write_lines(paste0(
"Done with ",
year,
" at ",
end_time,
" it took: ",
difftime(end_time, start_time, units = "mins") %>%
as.double() %>%
round_half_up(digits = 1),
" minutes"
),
path = "log",
append = TRUE
)
}
years <- list("1819")
future_map(
years,
~ create_fst_files(.x),
.progress = TRUE
)
library(haven)
library(janitor)
library(dplyr)
library(fst)
library(readr)
library(furrr)
plan(multiprocess)
create_fst_files <- function(year) {
start_time <- Sys.time()
file_dir <- "/conf/sourcedev/Source Linkage File Updates/"
indiv_filename <-
paste0(file_dir, year, "/source-individual-file-20", year)
episode_filename <-
paste0(file_dir, year, "/source-episode-file-20", year)
# Create individual file.
if (file.exists(paste0(indiv_filename, ".zsav"))) {
write_lines(
paste0(
"Starting individual file for 20",
year,
" It is now: ",
start_time
),
path = "log",
append = TRUE
)
if (!file.exists(paste0(indiv_filename, ".fst"))) {
read_sav(paste0(indiv_filename, ".zsav")) %>%
rename_all(tolower) %>%
as_tibble() %>%
write_fst(paste0(indiv_filename, ".fst"))
} else {
write_lines("Skipping as fst file already exists in sourcedev",
path = "log",
append = TRUE
)
}
} else {
write_lines(paste0("Skipping 20", year, " as zsav file doesn't exist"),
path = "log",
append = TRUE
)
}
# Create episode file.
if (file.exists(paste0(episode_filename, ".zsav"))) {
write_lines(
paste0("Starting episode file for 20", year, " It is now: ", Sys.time()),
path = "log",
append = TRUE
)
if (!file.exists(paste0(episode_filename, ".fst"))) {
read_sav(paste0(episode_filename, ".zsav")) %>%
rename_all(tolower) %>%
as_tibble() %>%
write_fst(paste0(episode_filename, ".fst"))
} else {
write_lines("Skipping as fst file already exists in sourcedev",
path = "log",
append = TRUE
)
}
} else {
write_lines(paste0("Skipping 20", year, " as zsav file doesn't exist"),
path = "log",
append = TRUE
)
}
end_time <- Sys.time()
write_lines(paste0(
"Done with ",
year,
" at ",
end_time,
" it took: ",
difftime(end_time, start_time, units = "mins") %>%
as.double() %>%
round_half_up(digits = 1),
" minutes"
),
path = "log",
append = TRUE
)
}
create_fst_lookups <- function() {
start_time <- Sys.time()
anon_chi_lookup <-
"/conf/hscdiip/01-Source-linkage-files/Anon-to-CHI-lookup"
chi_lookup <-
"/conf/hscdiip/01-Source-linkage-files/CHI-to-Anon-lookup"
write_lines(
paste0("Starting Anon CHI lookup it is now: ", start_time),
path = "log",
append = TRUE
)
read_sav(paste0(anon_chi_lookup, ".zsav")) %>%
rename_all(tolower) %>%
as_tibble() %>%
write_fst(paste0(anon_chi_lookup, ".fst"), 25)
write_lines(
paste0("Starting CHI lookup it is now: ", Sys.time()),
path = "log",
append = TRUE
)
read_sav(paste0(chi_lookup, ".zsav")) %>%
rename_all(tolower) %>%
as_tibble() %>%
write_fst(paste0(chi_lookup, ".fst"), 25)
end_time <- Sys.time()
write_lines(paste0(
"Done with lookups",
" at ",
end_time,
"took: ",
difftime(end_time, start_time, units = "mins") %>%
as.double() %>%
round_half_up(digits = 1),
" minutes"
),
path = "log",
append = TRUE
)
}
years <- list("2016/17" = "1617", "2017/18" = "1718")
future_map(
years,
~ create_fst_files(.x),
.progress = TRUE
)
create_fst_lookups()
years <- list("1516", "1819", "1920")
future_map(
years,
~ create_fst_files(.x),
.progress = TRUE
)
?write_fst
create_fst_files <- function(year) {
start_time <- Sys.time()
file_dir <- "/conf/sourcedev/Source Linkage File Updates/"
indiv_filename <-
paste0(file_dir, year, "/source-individual-file-20", year)
episode_filename <-
paste0(file_dir, year, "/source-episode-file-20", year)
# Create individual file.
if (file.exists(paste0(indiv_filename, ".zsav"))) {
write_lines(
paste0(
"Starting individual file for 20",
year,
" It is now: ",
start_time
),
path = "log",
append = TRUE
)
if (!file.exists(paste0(indiv_filename, ".fst"))) {
read_sav(paste0(indiv_filename, ".zsav")) %>%
rename_all(tolower) %>%
as_tibble() %>%
write_fst(paste0(indiv_filename, ".fst"))
} else {
write_lines("Skipping as fst file already exists in sourcedev",
path = "log",
append = TRUE
)
}
} else {
write_lines(paste0("Skipping 20", year, " as zsav file doesn't exist"),
path = "log",
append = TRUE
)
}
# Create episode file.
if (file.exists(paste0(episode_filename, ".zsav"))) {
write_lines(
paste0("Starting episode file for 20", year, " It is now: ", Sys.time()),
path = "log",
append = TRUE
)
if (!file.exists(paste0(episode_filename, ".fst"))) {
read_sav(paste0(episode_filename, ".zsav")) %>%
rename_all(tolower) %>%
as_tibble() %>%
write_fst(paste0(episode_filename, ".fst"), compress = 100)
} else {
write_lines("Skipping as fst file already exists in sourcedev",
path = "log",
append = TRUE
)
}
} else {
write_lines(paste0("Skipping 20", year, " as zsav file doesn't exist"),
path = "log",
append = TRUE
)
}
end_time <- Sys.time()
write_lines(paste0(
"Done with ",
year,
" at ",
end_time,
" it took: ",
difftime(end_time, start_time, units = "mins") %>%
as.double() %>%
round_half_up(digits = 1),
" minutes"
),
path = "log",
append = TRUE
)
}
# install.packages("fst")
library(haven)
library(janitor)
library(dplyr)
library(fst)
library(readr)
library(furrr)
plan(multiprocess)
create_fst_files <- function(year) {
start_time <- Sys.time()
file_dir <- "/conf/sourcedev/Source Linkage File Updates/"
indiv_filename <-
paste0(file_dir, year, "/source-individual-file-20", year)
episode_filename <-
paste0(file_dir, year, "/source-episode-file-20", year)
# Create individual file.
if (file.exists(paste0(indiv_filename, ".zsav"))) {
write_lines(
paste0(
"Starting individual file for 20",
year,
" It is now: ",
start_time
),
path = "log",
append = TRUE
)
if (!file.exists(paste0(indiv_filename, ".fst"))) {
read_sav(paste0(indiv_filename, ".zsav")) %>%
rename_all(tolower) %>%
as_tibble() %>%
write_fst(paste0(indiv_filename, ".fst"))
} else {
write_lines("Skipping as fst file already exists in sourcedev",
path = "log",
append = TRUE
)
}
} else {
write_lines(paste0("Skipping 20", year, " as zsav file doesn't exist"),
path = "log",
append = TRUE
)
}
# Create episode file.
if (file.exists(paste0(episode_filename, ".zsav"))) {
write_lines(
paste0("Starting episode file for 20", year, " It is now: ", Sys.time()),
path = "log",
append = TRUE
)
if (!file.exists(paste0(episode_filename, ".fst"))) {
read_sav(paste0(episode_filename, ".zsav")) %>%
rename_all(tolower) %>%
as_tibble() %>%
write_fst(paste0(episode_filename, ".fst"), compress = 100)
} else {
write_lines("Skipping as fst file already exists in sourcedev",
path = "log",
append = TRUE
)
}
} else {
write_lines(paste0("Skipping 20", year, " as zsav file doesn't exist"),
path = "log",
append = TRUE
)
}
end_time <- Sys.time()
write_lines(paste0(
"Done with ",
year,
" at ",
end_time,
" it took: ",
difftime(end_time, start_time, units = "mins") %>%
as.double() %>%
round_half_up(digits = 1),
" minutes"
),
path = "log",
append = TRUE
)
}
create_fst_lookups <- function() {
start_time <- Sys.time()
anon_chi_lookup <-
"/conf/hscdiip/01-Source-linkage-files/Anon-to-CHI-lookup"
chi_lookup <-
"/conf/hscdiip/01-Source-linkage-files/CHI-to-Anon-lookup"
write_lines(
paste0("Starting Anon CHI lookup it is now: ", start_time),
path = "log",
append = TRUE
)
read_sav(paste0(anon_chi_lookup, ".zsav")) %>%
rename_all(tolower) %>%
as_tibble() %>%
write_fst(paste0(anon_chi_lookup, ".fst"), compress = 25)
write_lines(
paste0("Starting CHI lookup it is now: ", Sys.time()),
path = "log",
append = TRUE
)
read_sav(paste0(chi_lookup, ".zsav")) %>%
rename_all(tolower) %>%
as_tibble() %>%
write_fst(paste0(chi_lookup, ".fst"), compress = 25)
end_time <- Sys.time()
write_lines(paste0(
"Done with lookups",
" at ",
end_time,
"took: ",
difftime(end_time, start_time, units = "mins") %>%
as.double() %>%
round_half_up(digits = 1),
" minutes"
),
path = "log",
append = TRUE
)
}
years <- list("1516", "1617", "1718", "1819", "1920")
future_map(
years,
~ create_fst_files(.x),
.progress = TRUE
)
years <- list("1516", "1617", "1718", "1819", "1920")
future_map(
years,
~ create_fst_files(.x),
.progress = TRUE
)
library(haven)
library(janitor)
library(dplyr)
library(fst)
library(readr)
library(furrr)
plan(multiprocess)
create_fst_files <- function(year) {
start_time <- Sys.time()
file_dir <- "/conf/sourcedev/Source Linkage File Updates/"
indiv_filename <-
paste0(file_dir, year, "/source-individual-file-20", year)
episode_filename <-
paste0(file_dir, year, "/source-episode-file-20", year)
# Create individual file.
if (file.exists(paste0(indiv_filename, ".zsav"))) {
write_lines(
paste0(
"Starting individual file for 20",
year,
" It is now: ",
start_time
),
path = "log",
append = TRUE
)
if (!file.exists(paste0(indiv_filename, ".fst"))) {
read_sav(paste0(indiv_filename, ".zsav")) %>%
rename_all(tolower) %>%
as_tibble() %>%
write_fst(paste0(indiv_filename, ".fst"))
} else {
write_lines("Skipping as fst file already exists in sourcedev",
path = "log",
append = TRUE
)
}
} else {
write_lines(paste0("Skipping 20", year, " as zsav file doesn't exist"),
path = "log",
append = TRUE
)
}
# Create episode file.
if (file.exists(paste0(episode_filename, ".zsav"))) {
write_lines(
paste0("Starting episode file for 20", year, " It is now: ", Sys.time()),
path = "log",
append = TRUE
)
if (!file.exists(paste0(episode_filename, ".fst"))) {
read_sav(paste0(episode_filename, ".zsav")) %>%
rename_all(tolower) %>%
as_tibble() %>%
write_fst(paste0(episode_filename, ".fst"), compress = 100)
} else {
write_lines("Skipping as fst file already exists in sourcedev",
path = "log",
append = TRUE
)
}
} else {
write_lines(paste0("Skipping 20", year, " as zsav file doesn't exist"),
path = "log",
append = TRUE
)
}
end_time <- Sys.time()
write_lines(paste0(
"Done with ",
year,
" at ",
end_time,
" it took: ",
difftime(end_time, start_time, units = "mins") %>%
as.double() %>%
round_half_up(digits = 1),
" minutes"
),
path = "log",
append = TRUE
)
}
create_fst_lookups <- function() {
start_time <- Sys.time()
anon_chi_lookup <-
"/conf/hscdiip/01-Source-linkage-files/Anon-to-CHI-lookup"
chi_lookup <-
"/conf/hscdiip/01-Source-linkage-files/CHI-to-Anon-lookup"
write_lines(
paste0("Starting Anon CHI lookup it is now: ", start_time),
path = "log",
append = TRUE
)
read_sav(paste0(anon_chi_lookup, ".zsav")) %>%
rename_all(tolower) %>%
as_tibble() %>%
write_fst(paste0(anon_chi_lookup, ".fst"), compress = 25)
write_lines(
paste0("Starting CHI lookup it is now: ", Sys.time()),
path = "log",
append = TRUE
)
read_sav(paste0(chi_lookup, ".zsav")) %>%
rename_all(tolower) %>%
as_tibble() %>%
write_fst(paste0(chi_lookup, ".fst"), compress = 25)
end_time <- Sys.time()
write_lines(paste0(
"Done with lookups",
" at ",
end_time,
"took: ",
difftime(end_time, start_time, units = "mins") %>%
as.double() %>%
round_half_up(digits = 1),
" minutes"
),
path = "log",
append = TRUE
)
}
years <- list("1112", "1213", "1314", "1415")
future_map(
years,
~ create_fst_files(.x),
.progress = TRUE
)
renv::upgrade()
renv::update()
install.packages(c("usethis", "devtools", "reprex", "styler"))
